dev.off()
pdf('kmeans.pdf')
wss <- (nrow(ret)-1)*sum(apply(ret,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(ret, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
kmeans.init[[t]] <- kmeans(ret, centers=3)
clusplot(ret, kmeans.init[[t]]$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main=paste0('t = ', t))#, xlim=c(-15,12), ylim=c(-5, 5))
dev.off()
pdf('kmeans.pdf')
wss <- (nrow(ret)-1)*sum(apply(ret,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(ret, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
kmeans.init[[t]] <- kmeans(ret, centers=3)
clusplot(ret, kmeans.init[[t]]$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main='kmeans (all returns)')#, xlim=c(-15,12), ylim=c(-5, 5))
dev.off()
pdf('kmeans.pdf')
wss <- (nrow(ret)-1)*sum(apply(ret,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(ret, centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
kmeans.init[[t]] <- kmeans(ret, centers=3)
clusplot(ret, kmeans.init[[t]]$cluster, color=TRUE, shade=TRUE, labels=2, lines=0, main='kmeans (all returns)')#, xlim=c(-15,12), ylim=c(-5, 5))
dev.off()
ir.pca <- prcomp(ret, center = TRUE,  scale. = TRUE)
print(ir.pca)
plot(ir.pca, type = "l")
summary(ir.pca)
ir.pca$x
summary(ir.pca)
summary(ir.pca)$c
dev.off()
pdf('HierarchicalClustering.pdf')
### Hierarchichal clustering
for (t in 1:T) {
d <- dist(returns[[t]], method = "euclidean")
fit <- hclust(d, method="ward")
plot(fit) # display dendogram
groups <- cutree(fit, k=5) # cut tree into 5 clusters
# draw dendogram with red borders around the 5 clusters
rect.hclust(fit, k=5, border="red")
}
dev.off()
pdf('HierarchicalClustering.pdf')
### Hierarchichal clustering
for (t in 1:T) {
d <- dist(returns[[t]], method = "euclidean")
fit <- hclust(d, method="ward.D")
plot(fit) # display dendogram
groups <- cutree(fit, k=5) # cut tree into 5 clusters
# draw dendogram with red borders around the 5 clusters
rect.hclust(fit, k=5, border="red")
}
dev.off()
dim(returns[[t]])
pdf('HierarchicalClustering.pdf')
### Hierarchichal clustering
for (t in 1:T) {
d <- dist(returns[[t]], method = "euclidean")
fit <- hclust(d, method="ward.D")
plot(fit, main=paste0('t = ', t)) # display dendogram
groups <- cutree(fit, k=11)
# draw dendogram with red borders around the 5 clusters
rect.hclust(fit, k=5, border="red")
}
dev.off()
pdf('HierarchicalClustering.pdf')
### Hierarchichal clustering
for (t in 1:T) {
d <- dist(t(returns[[t]]), method = "euclidean")
fit <- hclust(d, method="ward.D")
plot(fit, main=paste0('t = ', t)) # display dendogram
groups <- cutree(fit, k=11)
# draw dendogram with red borders around the 5 clusters
rect.hclust(fit, k=5, border="red")
}
dev.off()
pdf('HierarchicalClustering.pdf')
### Hierarchichal clustering
for (t in 1:T) {
d <- dist(t(returns[[t]]), method = "euclidean")
fit <- hclust(d, method="ward.D")
plot(fit, main=paste0('t = ', t), cex.axis=0.7) # display dendogram
groups <- cutree(fit, k=11)
# draw dendogram with red borders around the 5 clusters
rect.hclust(fit, k=11, border="red")
}
dev.off()
pdf('HierarchicalClustering.pdf')
### Hierarchichal clustering
for (t in 1:T) {
d <- dist(t(returns[[t]]), method = "euclidean")
fit <- hclust(d, method="ward.D")
plot(fit, main=paste0('t = ', t), cex.axis=0.2) # display dendogram
groups <- cutree(fit, k=11)
# draw dendogram with red borders around the 5 clusters
rect.hclust(fit, k=11, border="red")
}
dev.off()
t=1
source("C:/Users/Manuel/Desktop/Southampton/MasterThesis/Code/multiplot.R")
pdf('HierarchicalClustering.pdf')
### Hierarchichal clustering
for (t in 1:T) {
d <- dist(t(returns[[t]]), method = "euclidean")
fit <- hclust(d, method="ward.D")
hc1 <- plot(fit, main=paste0('t = ', t), cex.axis=0.2) # display dendogram
groups <- cutree(fit, k=11)
# draw dendogram with red borders around the 5 clusters
rect.hclust(fit, k=11, border="red")
dhc <- as.dendrogram(fit)
# Rectangular lines
ddata <- dendro_data(dhc, type = "rectangle")
hc2 <- ggplot(segment(ddata)) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) +
coord_flip() +
scale_y_reverse(expand = c(0.2, 0))
multiplot(hc1, hc2)
}
dev.off()
library(ggplot2)
### Hierarchichal clustering
pdf('HierarchicalClustering.pdf')
for (t in 1:T) {
d <- dist(t(returns[[t]]), method = "euclidean")
fit <- hclust(d, method="ward.D")
hc1 <- plot(fit, main=paste0('t = ', t), cex.axis=0.2) # display dendogram
groups <- cutree(fit, k=11)
# draw dendogram with red borders around the 5 clusters
rect.hclust(fit, k=11, border="red")
dhc <- as.dendrogram(fit)
# Rectangular lines
ddata <- dendro_data(dhc, type = "rectangle")
hc2 <- ggplot(segment(ddata)) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) +
coord_flip() +
scale_y_reverse(expand = c(0.2, 0))
multiplot(hc1, hc2)
}
dev.off()
รง''dendro_data
??dendro_data
library(ggdendro)
install.packages("ggdendro")
library(ggdendro)
pdf('HierarchicalClustering.pdf')
for (t in 1:T) {
d <- dist(t(returns[[t]]), method = "euclidean")
fit <- hclust(d, method="ward.D")
hc1 <- plot(fit, main=paste0('t = ', t), cex.axis=0.2) # display dendogram
groups <- cutree(fit, k=11)
# draw dendogram with red borders around the 5 clusters
rect.hclust(fit, k=11, border="red")
dhc <- as.dendrogram(fit)
# Rectangular lines
ddata <- dendro_data(dhc, type = "rectangle")
hc2 <- ggplot(segment(ddata)) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) +
coord_flip() +
scale_y_reverse(expand = c(0.2, 0))
multiplot(hc1, hc2)
}
dev.off()
pdf('HierarchicalClustering.pdf')
for (t in 1:T) {
d <- dist(t(returns[[t]]), method = "euclidean")
fit <- hclust(d, method="ward.D")
hc1 <- plot(fit, main=paste0('t = ', t), cex.axis=0.2) # display dendogram
groups <- cutree(fit, k=11)
# draw dendogram with red borders around the 5 clusters
rect.hclust(fit, k=11, border="red")
dhc <- as.dendrogram(fit)
# Rectangular lines
ddata <- dendro_data(dhc, type = "rectangle")
hc2 <- ggplot(segment(ddata)) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) +
coord_flip() +
scale_y_reverse(expand = c(0.2, 0))
multiplot(hc1, hc2, cols=2)
}
dev.off()
pdf('HierarchicalClustering.pdf')
for (t in 1:T) {
d <- dist(t(returns[[t]]), method = "euclidean")
fit <- hclust(d, method="ward.D")
hc1 <- plot(fit, main=paste0('t = ', t), cex.axis=0.2) # display dendogram
groups <- cutree(fit, k=11)
# draw dendogram with red borders around the 5 clusters
rect.hclust(fit, k=11, border="red")
dhc <- as.dendrogram(fit)
# Rectangular lines
ddata <- dendro_data(dhc, type = "rectangle")
hc2 <- ggplot(segment(ddata)) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) +
coord_flip() +
scale_y_reverse(expand = c(0.2, 0))
#           multiplot(hc1, hc2, cols=2)
}
dev.off()
ggplot() +
geom_segment(data = ddata$segments,
aes(x = x, y = y, xend = xend, yend = yend)) +
geom_text(data = ddata$labels,
aes(x = x, y = y, label = label), size = 3, vjust = 0) +
geom_text(data = ddata$leaf_labels,
aes(x = x, y = y, label = label), size = 3, vjust = 1) +
theme_dendro()
ggplot() +
geom_segment(data = ddata$segments,
aes(x = x, y = y, xend = xend, yend = yend))
ggplot() +
geom_segment(data = ddata$segments,
aes(x = x, y = y, xend = xend, yend = yend)) +
geom_text(data = ddata$labels,
ggplot() +
geom_segment(data = ddata$segments,
aes(x = x, y = y, xend = xend, yend = yend)) +
geom_text(data = ddata$labels
)
ggplot() +
geom_segment(data = ddata$segments,
aes(x = x, y = y, xend = xend, yend = yend)) +
geom_text(data = ddata$labels,
aes(x = x, y = y, label = label)
)
ggplot() +
geom_segment(data = ddata$segments,
aes(x = x, y = y, xend = xend, yend = yend)) +
geom_text(data = ddata$labels,
aes(x = x, y = y, label = label), size = 3, vjust = 0)
ggplot() +
geom_segment(data = ddata$segments,
aes(x = x, y = y, xend = xend, yend = yend)) +
geom_text(data = ddata$labels,
aes(x = x, y = y, label = label), size = 3, vjust = 0) +
geom_text(data = ddata$leaf_labels,
aes(x = x, y = y, label = label), size = 3, vjust = 1)
ggplot() +
geom_segment(data = ddata$segments,
aes(x = x, y = y, xend = xend, yend = yend)) +
geom_text(data = ddata$labels,
aes(x = x, y = y, label = label), size = 3, vjust = 0) +
theme_dendro()
ggplot() +
geom_segment(data = ddata$segments,
aes(x = x, y = y, xend = xend, yend = yend)) +
geom_text(data = ddata$labels,
aes(x = x, y = y, label = label), size = 3, vjust = 0)
ggplot() +
geom_segment(data = ddata$segments,
aes(x = x, y = y, xend = xend, yend = yend)) +
geom_text(data = ddata$labels,
aes(x = x, y = y, label = label), size = 3, vjust = 0) +
theme_dendro()+ coord_flip()
ggplot() +
geom_segment(data = ddata$segments,
aes(x = x, y = y, xend = xend, yend = yend)) +
geom_text(data = ddata$labels,
aes(x = x, y = y, label = label), size = 3, vjust = 0) +
theme_dendro() + coord_flip() + scale_y_reverse(expand = c(0.2, 0))
ggplot() +
geom_segment(data = ddata$segments,
aes(x = x, y = y, xend = xend, yend = yend)) +
geom_text(data = ddata$labels,
aes(x = x, y = y, label = label), size = 1, vjust = 0) +
theme_dendro() + coord_flip() + scale_y_reverse(expand = c(0.2, 0))
install.packages("ape")
library(ape)
library(ape)
plot(as.phylo(fit), type = "fan")
cutree(fit, 4)
class(cutree(fit, 4))
dim(cutree(fit, 4))
str(cutree(fit, 4))
head(info.stocks[[1]])
sumDeg.out <- sapply(info.stocks, function(x) sum(x$deg.out))
meanDeg.out <- sapply(info.stocks, function(x) mean(x$deg.out))
sdsDeg.out <- sapply(info.stocks, function(x) sd(x$deg.out))
meanWeight.out <- sapply(info.stocks, function(x) mean(x$weights.out))
sdsWeight.out <- sapply(info.stocks, function(x) sd(x$weights.out))
dfDeg <- data.frame(cbind(1:T, sumDeg.out, meanDeg.out, sdsDeg.out, meanWeight.out, sdsWeight.out))
names(dfDeg) <- c('epoch', 'sumDeg.out', 'meanDeg.out', 'sdsDeg.out', 'meanWeight.out', 'sdsWeight.out')
pl1 <- ggplot(data=dfDeg, aes(x=epoch, y=meanDeg.out), colour='black') + geom_errorbar(aes(ymin=meanDeg.out-sdsDeg.out, ymax=meanDeg.out+sdsDeg.out), width=0.25) +
geom_line() + geom_point() + ggtitle('Average Out Degrees') + ylab('Avg. Degree')
df <- cbind(sector=rep(names(sectors),sapply(sectors,nrow)),do.call(rbind,sectors))
pDegSectors <- pl1 + geom_line(data=df, aes(x=epoch,y=meanDeg.out, color=sector)) + scale_colour_hue(c=45, l=80)
pDegSectors
pl1
df <- cbind(sector=rep(names(sectors),sapply(sectors,nrow)),do.call(rbind,sectors))
sectors.degOut <- lapply(info.stocks, function(x) aggregate(x$deg.out, by=list(Category=x$sectors), FUN=sum))
sectors.degIn <- lapply(info.stocks, function(x) aggregate(x$deg.in, by=list(Category=x$sectors), FUN=sum))
sectors.weightOut <- lapply(info.stocks, function(x) aggregate(x$weights.out, by=list(Category=x$sectors), FUN=sum))
sectors.weightIn <- lapply(info.stocks, function(x) aggregate(x$weights.in, by=list(Category=x$sectors), FUN=sum))
info.sectors <- list()
for (t in 1:T) {
info.sectors[[t]] <- cbind(sectors.degOut[[t]], sectors.degIn[[t]]$x, sectors.weightOut[[t]]$x, sectors.weightIn[[t]]$x)
names(info.sectors[[t]]) <- c('sector', 'deg.out', 'deg.in', 'weight.out', 'weight.in')
}
ids <- info.stocks[[1]]$sectors
countSect <- data.frame(table(ids))
sectors <- list()
for (n in seq_along(sectors.degOut[[t]]$Category)) {
sectors[[n]] <- data.frame(matrix(ncol=9, nrow=T))
for (t in 1:T) {
sectors[[n]][t,] <- c(t, sectors.degOut[[t]]$x[n], sectors.degIn[[t]]$x[n], sectors.weightOut[[t]]$x[n], sectors.weightOut[[t]]$x[n]/countSect[n,2], sectors.weightOut[[t]]$x[n]/sectors.degOut[[t]]$x[n], sectors.weightIn[[t]]$x[n], sectors.degOut[[t]]$x[n]/countSect$Freq[n], sectors.degIn[[t]]$x[n]/countSect$Freq[n])
names(sectors[[n]]) <- c('epoch', 'deg.out', 'deg.in', 'weight.out', 'avg.weight.out.links', 'avg.weight.out.edges','weight.in', 'meanDeg.out', 'meanDeg.in')
}
}
names(sectors) <- info.sectors[[1]]$sector
sumDeg.out <- sapply(info.stocks, function(x) sum(x$deg.out))
meanDeg.out <- sapply(info.stocks, function(x) mean(x$deg.out))
sdsDeg.out <- sapply(info.stocks, function(x) sd(x$deg.out))
meanWeight.out <- sapply(info.stocks, function(x) mean(x$weights.out))
sdsWeight.out <- sapply(info.stocks, function(x) sd(x$weights.out))
dfDeg <- data.frame(cbind(1:T, sumDeg.out, meanDeg.out, sdsDeg.out, meanWeight.out, sdsWeight.out))
names(dfDeg) <- c('epoch', 'sumDeg.out', 'meanDeg.out', 'sdsDeg.out', 'meanWeight.out', 'sdsWeight.out')
pl1 <- ggplot(data=dfDeg, aes(x=epoch, y=meanDeg.out), colour='black') + geom_errorbar(aes(ymin=meanDeg.out-sdsDeg.out, ymax=meanDeg.out+sdsDeg.out), width=0.25) +
geom_line() + geom_point() + ggtitle('Average Out Degrees') + ylab('Avg. Degree')
df <- cbind(sector=rep(names(sectors),sapply(sectors,nrow)),do.call(rbind,sectors))
pDegSectors <- pl1 + geom_line(data=df, aes(x=epoch,y=meanDeg.out, color=sector)) + scale_colour_hue(c=45, l=80)
pDegSectors
df
class(df)
View(df)
sectors[[1]]
head8sectors[[1]])
head(sectors[[1]])
colors()
colors(10)
col
clustSectors <-info.Stocks[[t]]$sector.type
clustSectors <-info.stocks[[t]]$sector.type
plot(as.phylo(fit), type = "fan", tip.color = col[clustSectors],
label.offset = 1, cex = 0.7)
plot(as.phylo(fit), type = "fan")
clustSectors <-info.stocks[[t]]$sector.type
plot(as.phylo(fit), type = "fan",tip.color = col[clustSectors])
col[clustSectors]
clustSectors
col
plot(as.phylo(fit), type = "fan", tip.color = col$color[clustSectors],
label.offset = 1, cex = 0.7)
col$color[clustSectors]
plot(as.phylo(fit), type = "fan",tip.color = col$color[clustSectors])
hc3 <- plot(as.phylo(fit)",tip.color = col$color[clustSectors])
hc3 <- plot(as.phylo(fit),tip.color = col$color[clustSectors])
plot(fit, main=paste0('t = ', t), cex.axis=0.2)
clustSectors <- info.stocks[[t]]$sector.type
set(fit, branches_col, col$color[clustSectors])
library(dendextend)
install.packages("dendextend")
library(dendextend)
set(fit, branches_col, col$color[clustSectors])
class(fit)
dend <- returns[1:5,] %>%  scale %>%
dist %>% hclust %>% as.dendrogram
dend <- returns %>%  scale %>%
dist %>% hclust %>% as.dendrogram
dend <- returns[5:42,] %>%  scale %>%
dist %>% hclust %>% as.dendrogram
dim(returns)
dend <- ret[5:42,] %>%  scale %>%
dist %>% hclust %>% as.dendrogram
class(dend)
plot(dend)
plot(fit)
class(fit)
class(dend)
dend <- as.dendrogram(fit)
set(dend, branches_col, col$color[clustSectors])
?set
dend %>% set("branches_col", col$color[clustSectors]) %>% plot
ggplot(segment(ddata)) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) +
coord_flip() +
scale_y_reverse(expand = c(0.2, 0))
hc3
hc3
hc3 <- plot(as.phylo(fit), type = "fan",tip.color = col$color[clustSectors])
hc3
hc3 <- plot(as.phylo(fit),tip.color = col$color[clustSectors])
hc3 <- plot(as.phylo(fit), type = "fan",tip.color = col$color[clustSectors])
hc1 <- plot(fit, main=paste0('t = ', t), cex.axis=0.2) # display dendogram
hc1 <- plot(dend, main=paste0('t = ', t), cex.axis=0.2) # display dendogram
ggd1 <- as.ggdend(dend)
class(ggd1)
dend %>% set("branches_k_color", k = 4) #%>% plot
hc3 <- ggplot(as.ggdend(dend)) +
scale_y_reverse(expand = c(0.2, 0)) +
coord_polar(theta="x")
hc3
hc1 <- plot(dend, main=paste0('t = ', t), cex.axis=0.2) # display dendogram
ggplot(as.ggdend(dend)) +
scale_y_reverse(expand = c(0.2, 0)) +
coord_polar(theta="x")
plot(as.phylo(fit), type = "fan",tip.color = col$color[clustSectors])
plot(dend, main=paste0('t = ', t), cex.axis=0.2)
groups <- cutree(fit, k=11)
hc1 <- plot(dend, main=paste0('t = ', t), cex.axis=0.2) # display dendogram
groups <- cutree(fit, k=11)
# draw dendogram with red borders around the 5 clusters
rect.hclust(fit, k=11, border="red")
hc1 <- plot(as.phylo(fit), type = "fan",tip.color = col$color[clustSectors])
groups <- cutree(fit, k=11)
# draw dendogram with red borders around the 5 clusters
rect.hclust(fit, k=11, border="red")
hc2 <- plot(dend, main=paste0('t = ', t), cex.axis=0.2, tip.color = col$color[clustSectors]) # display dendogram
hc1 <- plot(as.phylo(fit), type = "fan",tip.color = col$color[clustSectors])
hc2 <- plot(dend, main=paste0('t = ', t), cex.axis=0.2) # display dendogram
groups <- cutree(fit, k=11)
# draw dendogram with red borders around the 5 clusters
rect.hclust(fit, k=11, border="red")
ggplot(segment(ddata)) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) +
coord_flip() +
scale_y_reverse(expand = c(0.2, 0))
names(info.stocks[[1]])
ggplot(segment(ddata)) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_text(data=info.stocks[[1]], aes(x=x, y=y, label=stocks, hjust=0,color=sectors), size=3)) +
coord_flip() +
scale_y_reverse(expand = c(0.2, 0))
ggplot(segment(ddata)) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_text(data=info.stocks[[1]], aes(x=x, y=y, label=stocks, hjust=0,color=sectors), size=3)) +
coord_flip()
hc2 <- ggplot(segment(ddata)) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_text(data=info.stocks[[1]], aes(x=x, y=y, label=stocks, hjust=0,color=sectors), size=3)) +
coord_flip()
ggplot(segment(ddata)) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_text(segment(ddata), aes(x=x, y=y, label=info.stocks[[1]]$stocks, hjust=0,color=info.stocks[[1]]$sectors, size=3)) +
coord_flip() +
scale_y_reverse(expand = c(0.2, 0))
ggplot(segment(ddata)) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend))
ggplot(segment(ddata)) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_text(segment(ddata), aes(x=x, y=y, label=info.stocks[[1]]$stocks, hjust=0,color=info.stocks[[1]]$sectors, size=3)) +
ggplot(segment(ddata)) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_text(segment(ddata), aes(x=x, y=y, label=info.stocks[[1]]$stocks, hjust=0,color=info.stocks[[1]]$sectors, size=3))
class(info.stocks[[1]]$sectors)
class(info.stocks[[1]]$stocks)
length(info.stocks[[1]]$stocks)1
length(info.stocks[[1]]$stocks)
length(info.stocks[[1]]$sectors)
hc2 <- plot(dend, main=paste0('t = ', t), cex.axis=0.2) # display dendogram
groups <- cutree(fit, k=11)
# draw dendogram with red borders around the 5 clusters
rect.hclust(fit, k=11, border="red")
class(dend)
hc2 <- plot(dend, main=paste0('t = ', t), cex.axis=0.2, horiz=TRUE) # display dendogram
groups <- cutree(fit, k=11)
rect.hclust(fit, k=11, border="red")
hc2 <- plot(dend, main=paste0('t = ', t), cex.axis=0.2)#, horiz=TRUE) # display dendogram
groups <- cutree(fit, k=11)
# draw dendogram with red borders around the 5 clusters
rect.hclust(fit, k=11, border="red")
hc2 <- plot(dend, main=paste0('t = ', t), cex.axis=0.2), horiz=TRUE) # display dendogram
hc2 <- plot(dend, main=paste0('t = ', t), cex.axis=0.2, horiz=TRUE) # display dendogram
groups <- cutree(fit, k=11)
# draw dendogram with red borders around the 5 clusters
rect.hclust(fit, k=11, border="red")
#           dhc <- as.dendrogram(fit)
#           # Rectangular lines
#           ddata <- dendro_data(dhc, type = "rectangle")
#           hc2 <- ggplot(segment(ddata)) +
#               geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) +
#               geom_text(segment(ddata), aes(x=x, y=y, label=info.stocks[[1]]$stocks, hjust=0,color=info.stocks[[1]]$sectors, size=3)) +
#               coord_flip() +
#               scale_y_reverse(expand = c(0.2, 0))
#
#           hc3 <- ggplot(as.ggdend(dend)) +
#                 scale_y_reverse(expand = c(0.2, 0)) +
#                 coord_polar(theta="x")
#
#
library(ggdendro)
library(ape)
library(dendextend)
pdf('HierarchicalClustering.pdf')
for (t in 1:T) {
d <- dist(t(returns[[t]]), method = "euclidean")
fit <- hclust(d, method="ward.D")
dend <- as.dendrogram(fit)
clustSectors <- info.stocks[[t]]$sector.type
# set(fit, branches_k_color, k = ) #color branches controlled by kmeans
# dend %>% set("branches_col", col$color[clustSectors]) %>% plot
dend %>% set("branches_k_color", k = 4) #%>% plot
hc1 <- plot(as.phylo(fit), type = "fan",tip.color = col$color[clustSectors])
hc2 <- plot(dend, main=paste0('t = ', t), cex.axis=0.2)#, horiz=TRUE) # display dendogram
groups <- cutree(fit, k=11)
# draw dendogram with red borders around the 5 clusters
rect.hclust(fit, k=11, border="red")
#           dhc <- as.dendrogram(fit)
#           # Rectangular lines
#           ddata <- dendro_data(dhc, type = "rectangle")
#           hc2 <- ggplot(segment(ddata)) +
#               geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) +
#               geom_text(segment(ddata), aes(x=x, y=y, label=info.stocks[[1]]$stocks, hjust=0,color=info.stocks[[1]]$sectors, size=3)) +
#               coord_flip() +
#               scale_y_reverse(expand = c(0.2, 0))
#
#           hc3 <- ggplot(as.ggdend(dend)) +
#                 scale_y_reverse(expand = c(0.2, 0)) +
#                 coord_polar(theta="x")
#
#
#           hc3 <- plot(as.phylo(fit),tip.color = col$color[clustSectors])
#           multiplot(hc1, hc2, cols=2)
}
dev.off()
