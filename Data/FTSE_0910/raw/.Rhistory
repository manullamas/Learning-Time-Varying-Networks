sortedDeg.in <- list()
sortedDeg.out <- list()
sortedDeg.total <- list()
hubs.in <- list()
for (t in seq_along(deg.out)) {
info.stocks[[t]] <- (cbind(stockNames$FTSE100_list, Sectors[,3], data.frame(deg.total[[t]]),
data.frame(deg.out[[t]]), data.frame(deg.in[[t]])))
names(info.stocks[[t]]) <- c('stocks', 'sectors', 'deg.total', 'deg.out', 'deg.in')
sortedDeg.in[[t]] <- info.stocks[[t]][order(deg.in[[t]], decreasing=T),]
sortedDeg.out[[t]] <- info.stocks[[t]][order(deg.out[[t]], decreasing=T),]
sortedDeg.total[[t]] <- info.stocks[[t]][order(deg.total[[t]], decreasing=T),]
hubs.in[[t]] <- sortedDeg.in[[t]][sortedDeg.in[[t]]$deg.in > mean(sortedDeg.in[[t]]$deg.in),]
}
##       Set Vertex/Edges attributes & Layouts
library(RColorBrewer)
col = list(color = brewer.pal(11, 'Paired'))
absWeights <- lapply(netSparse, function(x) abs(E(x)$weight))
weights <- lapply(netSparse, function(x) (E(x)$weight))
edge.start <- lapply(netSparse, function(x) ends(x, es=E(x), names=F)[,1])
edge.end <- lapply(netSparse, function(x) ends(x, es=E(x), names=F)[,2])
edge.col.out <- list()
edge.col.in <- list()
fr <- list()
kk <- list()
kk3 <- list()
MDS <- list()
MDSdist <- list()
lgl <- list()
drl <- list()
for (t in seq_along(netSparse)) {
#   print(paste0('t = ', t))
V(netSparse[[t]])$sectors <- Sectors$Sector
V(netSparse[[t]])$sector.type <- Sectors$Sector.type
V(netSparse[[t]])$color <- col$color[Sectors$Sector.type]
V(netSparse[[t]])$size <- 3*log(deg.out[[t]])
E(netSparse[[t]])$weights.abs1 <- abs(E(netSparse[[t]])$weight) ### absWeights
edge.col.out[[t]] <- V(netSparse[[t]])$color[edge.start[[t]]]
edge.col.in[[t]] <- V(netSparse[[t]])$color[edge.end[[t]]]
E(netSparse[[t]])$col.out <- edge.col.out[[t]]
E(netSparse[[t]])$col.in <- edge.col.in[[t]]
fr[[t]] <- layout_with_fr(netSparse[[t]], weights = absWeights[[t]])
kk[[t]] <- layout_with_kk(netSparse[[t]], weights = absWeights[[t]])
kk3[[t]] <- layout_with_kk(netSparse[[t]], weights = absWeights[[t]], dim = 3)
MDS[[t]] <- layout_with_mds(netSparse[[t]])
MDSdist[[t]] <- layout_with_mds(netSparse[[t]], dist = as.matrix(distMatrices[[t]]))
lgl[[t]] <- layout_with_lgl(netSparse[[t]])
drl[[t]] <- layout_with_drl(netSparse[[t]])
#l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1)
}
for (t in seq_along(netSparse)) {
#   print(paste0('t = ', t))
V(netSparse[[t]])$sectors <- Sectors$Sector
V(netSparse[[t]])$sector.type <- Sectors$Sector.type
V(netSparse[[t]])$color <- col$color[Sectors$Sector.type]
V(netSparse[[t]])$size <- 3*log(deg.out[[t]])
E(netSparse[[t]])$weights.abs1 <- abs(E(netSparse[[t]])$weight) ### absWeights
edge.col.out[[t]] <- V(netSparse[[t]])$color[edge.start[[t]]]
edge.col.in[[t]] <- V(netSparse[[t]])$color[edge.end[[t]]]
E(netSparse[[t]])$col.out <- edge.col.out[[t]]
E(netSparse[[t]])$col.in <- edge.col.in[[t]]
fr[[t]] <- layout_with_fr(netSparse[[t]], weights = absWeights[[t]])
kk[[t]] <- layout_with_kk(netSparse[[t]], weights = absWeights[[t]])
kk3[[t]] <- layout_with_kk(netSparse[[t]], weights = absWeights[[t]], dim = 3)
MDS[[t]] <- layout_with_mds(netSparse[[t]])
MDSdist[[t]] <- layout_with_mds(netSparse[[t]], dist = as.matrix(distMatrices[[t]]))
lgl[[t]] <- layout_with_lgl(netSparse[[t]])
#drl[[t]] <- layout_with_drl(netSparse[[t]])
#l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1)
}
fr
fr[[1]]
class(fr[[1]])
pdf("pruebaSparse.pdf")
for (t in 1:T){
plot.igraph(netSparse[[t]], layout = kk[[t]], edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = 'black', vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1,
main = 'kk -in', edge.arrow.mode = 0)
legend(x=0.5, y=-0.8, unique(SectorsFull$Sector), pch=21,  col="#777777", pt.bg=col$color,
pt.cex=1.3, cex=0.7, bty="n", ncol=1, y.intersp = 1, x.intersp = 1)
}
dev.off()
getwd()
pdf("pruebaSparse.pdf")
for (t in 1:T){
plot.igraph(netSparse[[t]], layout = kk[[t]], edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = 'black', vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1,
main = print(paste0('kk - t = ', t)), edge.arrow.mode = 0)
legend(x=0.5, y=-0.8, unique(SectorsFull$Sector), pch=21,  col="#777777", pt.bg=col$color,
pt.cex=1.3, cex=0.7, bty="n", ncol=1, y.intersp = 1, x.intersp = 1)
}
dev.off()
1:T
sum(edge.col.in)
netSparse[[1]]
E(netSparse[[1]])
length(E(netSparse[[1]]))
length(E(netSparse[[2]]))
length(E(netSparse[[3]]))
length(E(netSparse[[4]]))
length(E(netSparse[[5]]))
length(E(netSparse[[8]]))
length(E(netSparse[[10]]))
length(E(netSparse[[11]]))
length(E(netSparse[[12]]))
for (t seq_along(netSparse){
plot.igraph(netSparse[[t]], layout = kk[[t]], edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = 'black', vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1,
main = print(paste0('kk layout   -  t = ', t)), edge.arrow.mode = 0)
for (t seq_along(netSparse){
pdf("pruebaSparse.pdf")
for (t in seq_along(netSparse){
plot.igraph(netSparse[[t]], layout = kk[[t]], edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = 'black', vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1,
main = print(paste0('kk layout   -  t = ', t)), edge.arrow.mode = 0)
legend(x=0.5, y=-0.8, unique(SectorsFull$Sector), pch=21,  col="#777777", pt.bg=col$color,
pt.cex=1.3, cex=0.7, bty="n", ncol=1, y.intersp = 1, x.intersp = 1)
}
dev.off()
for (t in seq_along(netSparse)) {
plot.igraph(netSparse[[t]], layout = kk[[t]], edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = 'black', vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1,
main = print(paste0('kk layout   -  t = ', t)), edge.arrow.mode = 0)
legend(x=0.5, y=-0.8, unique(SectorsFull$Sector), pch=21,  col="#777777", pt.bg=col$color,
pt.cex=1.3, cex=0.7, bty="n", ncol=1, y.intersp = 1, x.intersp = 1)
}
dev.off()
pdf("pruebaSparse.pdf")
for (t in seq_along(netSparse)) {
plot.igraph(netSparse[[t]], layout = kk[[t]], edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = 'black', vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1,
main = print(paste0('kk layout   -  t = ', t)), edge.arrow.mode = 0)
legend(x=0.5, y=-0.8, unique(SectorsFull$Sector), pch=21,  col="#777777", pt.bg=col$color,
pt.cex=1.3, cex=0.7, bty="n", ncol=1, y.intersp = 1, x.intersp = 1)
}
dev.off()
info.stocks[[1]]
hubs.in
(deg.out[[1]]>40)
(deg.in[[1]]>40)
(deg.in[[1]])
deg.in <- lapply(netSparse, function(x) igraph::degree(x, mode = 'in'))
(deg.in[[1]]>20)
(deg.in[[1]]>20)+1
t=1
t=1  plot.igraph(netSparse[[t]], layout = kk[[t]], edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','red')[(deg.in[[1]]>20)+1], vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1,
main = print(paste0('kk layout   -  t = ', t)), edge.arrow.mode = 0)
plot.igraph(netSparse[[t]], layout = kk[[t]], edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','red')[(deg.in[[1]]>20)+1], vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1,
main = print(paste0('kk layout   -  t = ', t)), edge.arrow.mode = 0)
plot.igraph(netSparse[[t]], layout = kk[[t]], edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[1]]>20)+1], vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1,
main = print(paste0('kk layout   -  t = ', t)), edge.arrow.mode = 0)
(deg.in[[t]]>mean(deg.in[[t]]))+1
pdf("pruebaSparse.pdf")
for (t in seq_along(netSparse)) {
plot.igraph(netSparse[[t]], layout = kk[[t]], edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[t]]>mean(deg.in[[t]]))+1], vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1,
main = print(paste0('kk layout   -  t = ', t)), edge.arrow.mode = 0)
legend(x=0.5, y=-0.8, unique(SectorsFull$Sector), pch=21,  col="#777777", pt.bg=col$color,
pt.cex=1.3, cex=0.7, bty="n", ncol=1, y.intersp = 1, x.intersp = 1)
}
dev.off()
plot.igraph(netSparse[[t]], layout = kk[[t]], edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[t]]>mean(deg.in[[t]]))+1], vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0
main = 'kk layout', sub = paste0('t = ', t))
plot.igraph(netSparse[[t]], layout = kk[[t]], edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[t]]>mean(deg.in[[t]]))+1], vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
main = 'kk layout', sub = paste0('t = ', t))
?vertex.label
?vertex_attr
?plot.igraph
plot.igraph(netSparse[[t]], layout = kk[[t]], edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[t]]>mean(deg.in[[t]]))+1], vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
main = 'kk layout', sub = paste0('t = ', t))
pdf("pruebaSparse.pdf")
for (t in seq_along(netSparse)) {
plot.igraph(netSparse[[t]], layout = kk[[t]], edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[t]]>mean(deg.in[[t]]))+1], vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
main = 'kk layout', sub = paste0('t = ', t))
legend(x=0.5, y=-0.8, unique(SectorsFull$Sector), pch=21,  col="#777777", pt.bg=col$color,
pt.cex=1.3, cex=0.7, bty="n", ncol=1, y.intersp = 1, x.intersp = 1)
}
dev.off()
class(netSparse[[1]])
(netSparse[[1]])
length(netSparse[[1]])
str(netSparse[[1]])
pdf("pruebaSparse_randomFixed.pdf")
for (t in seq_along(netSparse)) {
plot.igraph(netSparse[[t]], layout = layout_randomly(netSparse[[1]]), edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[t]]>mean(deg.in[[t]]))+1], vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
main = 'MDS layout', sub = paste0('t = ', t))
legend(x=0.5, y=-0.8, unique(SectorsFull$Sector), pch=21,  col="#777777", pt.bg=col$color,
pt.cex=1.3, cex=0.7, bty="n", ncol=1, y.intersp = 1, x.intersp = 1)
}
dev.off()
pdf("pruebaSparse_randomFixed.pdf")
for (t in seq_along(netSparse)) {
rnd <- layout_randomly(netSparse[[1]])
plot.igraph(netSparse[[t]], layout = rnd, edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[t]]>mean(deg.in[[t]]))+1], vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
main = 'MDS layout', sub = paste0('t = ', t))
legend(x=0.5, y=-0.8, unique(SectorsFull$Sector), pch=21,  col="#777777", pt.bg=col$color,
pt.cex=1.3, cex=0.7, bty="n", ncol=1, y.intersp = 1, x.intersp = 1)
}
dev.off()
pdf("pruebaSparse_randomFixed.pdf")
rnd <- layout_randomly(netSparse[[1]])
for (t in seq_along(netSparse)) {
plot.igraph(netSparse[[t]], layout = rnd, edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[t]]>mean(deg.in[[t]]))+1], vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
main = 'MDS layout', sub = paste0('t = ', t))
legend(x=0.5, y=-0.8, unique(SectorsFull$Sector), pch=21,  col="#777777", pt.bg=col$color,
pt.cex=1.3, cex=0.7, bty="n", ncol=1, y.intersp = 1, x.intersp = 1)
}
dev.off()
length(E(netSparse[[1]])$weight)
(E(netSparse[[1]])$weight)
mean(E(netSparse[[1]])$weight)
log(E(netSparse[[1]])$weight)
hist(E(netSparse[[1]])$weight)
hist(E(netSparse[[8]])$weight)
hist(E(netSparse[[1]])$weight)
rnd <- layout_randomly(netSparse[[1]])
pdf("pruebaSparse_randomFixed.pdf")
for (t in seq_along(netSparse)) {
plot.igraph(netSparse[[t]], layout = rnd, edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[t]]>mean(deg.in[[t]]))+1], vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
main = 'MDS layout', sub = paste0('t = ', t))
legend(x=0.5, y=-0.8, unique(SectorsFull$Sector), pch=21,  col="#777777", pt.bg=col$color,
pt.cex=1.3, cex=0.7, bty="n", ncol=1, y.intersp = 1, x.intersp = 1)
}
dev.off()
plot.igraph(netSparse[[t]], layout = MDS[[t]], edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[t]]>mean(deg.in[[t]]))+1], vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
main = 'MDS layout', sub = paste0('t = ', t), vertex.size = deg.out[[t]])
plot.igraph(netSparse[[t]], layout = kk[[t]], edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[t]]>mean(deg.in[[t]]))+1], vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
main = 'kk layout', sub = paste0('t = ', t), vertex.size = deg.out[[t]])
t
t=1
plot.igraph(netSparse[[t]], layout = kk[[t]], edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[t]]>mean(deg.in[[t]]))+1], vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
main = 'kk layout', sub = paste0('t = ', t), vertex.size = deg.out[[t]])
pdf("pruebaSparse_kk.pdf")
for (t in seq_along(netSparse)) {
plot.igraph(netSparse[[t]], layout = kk[[t]], edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[t]]>mean(deg.in[[t]]))+1], vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
main = 'kk layout', sub = paste0('t = ', t), vertex.size = deg.out[[t]])
legend(x=0.5, y=-0.8, unique(SectorsFull$Sector), pch=21,  col="#777777", pt.bg=col$color,
pt.cex=1.3, cex=0.7, bty="n", ncol=1, y.intersp = 1, x.intersp = 1)
}
dev.off()
deg.out[[1]]
plot.igraph(netSparse[[t]], layout = kk[[t]], edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[t]]>mean(deg.in[[t]]))+1], vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
main = 'kk layout', sub = paste0('t = ', t), vertex.size = deg.out[[t]]+deg.in[[t]]/10)
pdf("pruebaSparse_kk.pdf")
for (t in seq_along(netSparse)) {
plot.igraph(netSparse[[t]], layout = kk[[t]], edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[t]]>mean(deg.in[[t]]))+1], vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
main = 'kk layout', sub = paste0('t = ', t), vertex.size = deg.out[[t]]+deg.in[[t]]/10)
legend(x=0.5, y=-0.8, unique(SectorsFull$Sector), pch=21,  col="#777777", pt.bg=col$color,
pt.cex=1.3, cex=0.7, bty="n", ncol=1, y.intersp = 1, x.intersp = 1)
}
dev.off()
pdf("pruebaSparse_kk.pdf")
for (t in seq_along(netSparse)) {
plot.igraph(netSparse[[t]], layout = kk[[t]], edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[t]]>mean(deg.in[[t]]))+1], vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
main = 'kk layout', sub = paste0('t = ', t), vertex.size = deg.out[[t]]+deg.in[[t]]/10)
legend(x=0.5, y=-0.8, unique(SectorsFull$Sector), pch=21,  col="#777777", pt.bg=col$color,
pt.cex=1.3, cex=0.7, bty="n", ncol=1, y.intersp = 1, x.intersp = 1)
}
dev.off()
pdf("pruebaSparse_kk.pdf")
for (t in seq_along(netSparse)) {
plot.igraph(netSparse[[t]], layout = kk[[t]], edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[t]]>mean(deg.in[[t]]))+1], vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
main = 'kk layout', sub = paste0('t = ', t), vertex.size = deg.out[[t]]+deg.in[[t]]/10)
legend(x=0.5, y=-0.8, unique(SectorsFull$Sector), pch=21,  col="#777777", pt.bg=col$color,
pt.cex=1.3, cex=0.7, bty="n", ncol=1, y.intersp = 1, x.intersp = 1)
}
dev.off()
pdf("pruebaSparse_fr.pdf")
for (t in seq_along(netSparse)) {
plot.igraph(netSparse[[t]], layout = fr[[t]], edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[t]]>mean(deg.in[[t]]))+1], vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
main = 'fr layout', sub = paste0('t = ', t), vertex.size = deg.out[[t]]+deg.in[[t]]/10)
legend(x=0.5, y=-0.8, unique(SectorsFull$Sector), pch=21,  col="#777777", pt.bg=col$color,
pt.cex=1.3, cex=0.7, bty="n", ncol=1, y.intersp = 1, x.intersp = 1)
}
dev.off()
pdf("pruebaSparse_MDS.pdf")
for (t in seq_along(netSparse)) {
plot.igraph(netSparse[[t]], layout = MDS[[t]], edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[t]]>mean(deg.in[[t]]))+1], vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
main = 'MDS layout', sub = paste0('t = ', t), vertex.size = deg.out[[t]]+deg.in[[t]]/10)
legend(x=0.5, y=-0.8, unique(SectorsFull$Sector), pch=21,  col="#777777", pt.bg=col$color,
pt.cex=1.3, cex=0.7, bty="n", ncol=1, y.intersp = 1, x.intersp = 1)
}
dev.off()
rnd <- layout_randomly(netSparse[[1]])
pdf("pruebaSparse_randomFixed.pdf")
for (t in seq_along(netSparse)) {
plot.igraph(netSparse[[t]], layout = rnd, edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[t]]>mean(deg.in[[t]]))+1], vertex.size =deg.out[[t]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
main = 'MDS layout', sub = paste0('t = ', t), vertex.size = deg.out[[t]]+deg.in[[t]]/10)
legend(x=0.5, y=-0.8, unique(SectorsFull$Sector), pch=21,  col="#777777", pt.bg=col$color,
pt.cex=1.3, cex=0.7, bty="n", ncol=1, y.intersp = 1, x.intersp = 1)
}
dev.off()
info.stocks[[1]]
getwd()
saveGIF( { plot.igraph(netSparse[[1]], layout = rnd, edge.color = edge.col.in[[1]], edge.curved=.3, edge.width= (E(netSparse[[1]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[1]]>mean(deg.in[[1]]))+1], vertex.size =deg.out[[1]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
main = 'MDS layout', sub = paste0('t = ', 1), vertex.size = deg.out[[1]]+deg.in[[1]]/10)
plot.igraph(netSparse[[2]], layout = rnd, edge.color = edge.col.in[[2]], edge.curved=.3, edge.width= (E(netSparse[[2]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[2]]>mean(deg.in[[2]]))+1], vertex.size =deg.out[[2]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
main = 'MDS layout', sub = paste0('t = ', 2), vertex.size = deg.out[[2]]+deg.in[[2]]/10) }
interval = .8, movie.name="network_animation.gif" )
library('animation')
library('igraph')
ani.options(convert='C:/Program Files/ImageMagick-7.0.2-Q16/convert.exe')
saveGIF( { plot.igraph(netSparse[[1]], layout = rnd, edge.color = edge.col.in[[1]], edge.curved=.3, edge.width= (E(netSparse[[1]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[1]]>mean(deg.in[[1]]))+1], vertex.size =deg.out[[1]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
main = 'MDS layout', sub = paste0('t = ', 1), vertex.size = deg.out[[1]]+deg.in[[1]]/10)
plot.igraph(netSparse[[2]], layout = rnd, edge.color = edge.col.in[[2]], edge.curved=.3, edge.width= (E(netSparse[[2]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[2]]>mean(deg.in[[2]]))+1], vertex.size =deg.out[[2]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
main = 'MDS layout', sub = paste0('t = ', 2), vertex.size = deg.out[[2]]+deg.in[[2]]/10) }
interval = .8, movie.name="network_animation.gif" )
saveGIF( { plot.igraph(netSparse[[1]], layout = rnd, edge.color = edge.col.in[[1]], edge.curved=.3, edge.width= (E(netSparse[[1]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[1]]>mean(deg.in[[1]]))+1], vertex.size =deg.out[[1]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
sub = paste0('t = ', 1), vertex.size = deg.out[[1]]+deg.in[[1]]/10)
plot.igraph(netSparse[[2]], layout = rnd, edge.color = edge.col.in[[2]], edge.curved=.3, edge.width= (E(netSparse[[2]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[2]]>mean(deg.in[[2]]))+1], vertex.size =deg.out[[2]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
sub = paste0('t = ', 2), vertex.size = deg.out[[2]]+deg.in[[2]]/10) }
interval = .8, movie.name="network_animation.gif" )
saveGIF( { plot.igraph(netSparse[[1]], layout = rnd, edge.color = edge.col.in[[1]], edge.curved=.3, edge.width= (E(netSparse[[1]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[1]]>mean(deg.in[[1]]))+1], vertex.size =deg.out[[1]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
sub = print(paste0('t = ', 1)), vertex.size = deg.out[[1]]+deg.in[[1]]/10)
plot.igraph(netSparse[[2]], layout = rnd, edge.color = edge.col.in[[2]], edge.curved=.3, edge.width= (E(netSparse[[2]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[2]]>mean(deg.in[[2]]))+1], vertex.size =deg.out[[2]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
sub = print(paste0('t = ', 2)), vertex.size = deg.out[[2]]+deg.in[[2]]/10) }
interval = .8, movie.name="network_animation.gif" )
saveGIF( { plot.igraph(netSparse[[1]], layout = rnd, edge.color = edge.col.in[[1]], edge.curved=.3, edge.width= (E(netSparse[[1]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[1]]>mean(deg.in[[1]]))+1], vertex.size =deg.out[[1]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
vertex.size = deg.out[[1]]+deg.in[[1]]/10)
plot.igraph(netSparse[[2]], layout = rnd, edge.color = edge.col.in[[2]], edge.curved=.3, edge.width= (E(netSparse[[2]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[2]]>mean(deg.in[[2]]))+1], vertex.size =deg.out[[2]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
vertex.size = deg.out[[2]]+deg.in[[2]]/10) }
interval = .8, movie.name="network_animation.gif" )
saveGIF( { plot.igraph(netSparse[[1]], layout = rnd, edge.color = edge.col.in[[1]], edge.curved=.3, edge.width= (E(netSparse[[1]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[1]]>mean(deg.in[[1]]))+1], vertex.size =deg.out[[1]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
vertex.size = deg.out[[1]]+deg.in[[1]]/10)
plot.igraph(netSparse[[2]], layout = rnd, edge.color = edge.col.in[[2]], edge.curved=.3, edge.width= (E(netSparse[[2]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[2]]>mean(deg.in[[2]]))+1], vertex.size =deg.out[[2]],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
vertex.size = deg.out[[2]]+deg.in[[2]]/10) },
interval = .8, movie.name="network_animation.gif" )
?saveGIF
saveGIF( {
for (t in 1:T) {
plot.igraph(netSparse[[t]], layout = rnd, edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[t]]>mean(deg.in[[t]]))+1],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
vertex.size = deg.out[[t]]+deg.in[[t]]/10)
}
}
interval = .8, movie.name="network_animation.gif" )
)
saveGIF( {
for (t in 1:T) {
plot.igraph(netSparse[[t]], layout = rnd, edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[t]]>mean(deg.in[[t]]))+1],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
vertex.size = deg.out[[t]]+deg.in[[t]]/10)
}
}
interval = .8, movie.name="network_animation.gif" )
sd
saveGIF( {
for (t in 1:T) {
plot.igraph(netSparse[[t]], layout = rnd, edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[t]]>mean(deg.in[[t]]))+1],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
vertex.size = deg.out[[t]]+deg.in[[t]]/10)
}
}
interval = .8, movie.name="network_animation.gif" )
saveGIF( {
for (t in 1:T) {
plot.igraph(netSparse[[t]], layout = rnd, edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[t]]>mean(deg.in[[t]]))+1],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
vertex.size = deg.out[[t]]+deg.in[[t]]/10)
}
},
interval = .8, movie.name="network_animation.gif" )
saveGIF( {
for (t in 1:T) {
plot.igraph(netSparse[[t]], layout = rnd, edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[t]]>mean(deg.in[[t]]))+1],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
vertex.size = deg.out[[t]]+deg.in[[t]]/10, sub = paste0('t = ', t))
}
},
interval = .8, movie.name="network_animation.gif" )
saveGIF( {
for (t in 1:T) {
plot.igraph(netSparse[[t]], layout = rnd, edge.color = edge.col.in[[t]], edge.curved=.3, edge.width= (E(netSparse[[t]])$weight)/3,
vertex.label=as.character(stockNames[,2]), vertex.label.color = c('black','yellow')[(deg.in[[t]]>mean(deg.in[[t]]))+1],
edge.arrow.size = 1, edge.arrow.width = 1, edge.arrow.mode = 0,
vertex.size = deg.out[[t]]+deg.in[[t]]/10, sub = paste0('t = ', t))
legend(x=0.5, y=-0.8, unique(SectorsFull$Sector), pch=21,  col="#777777", pt.bg=col$color,
pt.cex=1.3, cex=0.7, bty="n", ncol=1, y.intersp = 1, x.intersp = 1)
}
},
interval = 1, movie.name="network_animation.gif"
)
rm(list=ls)
rm(list=ls())
path <- 'C:/Users/Manuel/Desktop/Southampton/MasterThesis/Data/FTSE_0910/raw/'
setwd('C:/Users/Manuel/Desktop/Southampton/MasterThesis/Data/FTSE_0910/raw/')
### Create FTSe100 list of components
myList = list.files(path, pattern="*.csv")
FTSE100_list <- vector(mode="character", length=0)
for (i in 1:length(myList)) {
FTSE100_list[i] = unlist(strsplit(myList[i], split='_', fixed=TRUE))[1]   #remove _L.csv
}
list_dfs <- list()
for (i in seq_along(myList)) {
# if (i != 1) {
list_dfs[[i]] <- read.csv(file = myList[i])[, c('Date', 'Close')]
# }
}
# Create list with dataframes
list_dfs <- list()
for (i in seq_along(myList)) {
# if (i != 1) {
list_dfs[[i]] <- read.csv(file = myList[i])[, c('Date', 'Close')]
# }
}
# Merge datasets by Date (inner join)
dfStocks <-  Reduce(function(x,y) merge(x,y, by = 'Date'), list_dfs)
# Name columns of dfStocks
names(dfStocks) <- c('Date', FTSE100_list)
View(dfStocks)
StocksFTSE <- dfStocks[2:ncol(dfStocks)]
Dates <- dfStocks[1]
### Calculate returns / logReturns
returns <- data.frame()
logReturns <- data.frame()
for (j in 1:ncol(StocksFTSE)) {
for (i in 1:nrow(StocksFTSE)-1) {
returns[i,j] <- (StocksFTSE[i+1,j]-StocksFTSE[i,j])/StocksFTSE[i,j]
logReturns[i,j] <- log(StocksFTSE[i+1,j]/StocksFTSE[i,j])
}
}
names(returns) <- FTSE100_list
names(logReturns) <- FTSE100_list
### dates vector corresponding to returns
datesReturns <- data.frame(Dates[2:nrow(Dates),])
FTSE_indexes <- cbind(1:length(FTSE100_list), FTSE100_list)
path1 <- 'C:/Users/Manuel/Desktop/Southampton/MasterThesis/Data/FTSE_0910/processed/'
path2 <- 'C:/Users/Manuel/Desktop/Southampton/MasterThesis/Data/FTSE_0910/networks/'
write.csv(returns, file = paste0(path1,"FTSE100_returns.csv"),row.names=FALSE)
write.csv(logReturns, file = paste0(path1,"FTSE100_logReturns.csv"),row.names=FALSE)
write.csv(datesReturns, file = paste0(path1,"DatesReturns.csv"),row.names=FALSE)
write.csv(FTSE100_list, file = paste0(path1,"FTSE_names.csv"),row.names=FALSE)
write.csv(FTSE_indexes, file = paste0(path2,"FTSE_indexes.csv"),row.names=FALSE)
